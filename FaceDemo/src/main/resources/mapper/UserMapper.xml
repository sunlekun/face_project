<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UserDao">
 
	 
	 
    <select id="findAllUser" resultType="User">
		select m.* from users m where m.is_delete=0 order by m.add_time  desc
	 </select>
	 
	 <select id="findAllUserCount" resultType="int">
		select count(*) from users m where m.is_delete=0 
	 </select>
	 
	  <select id="findAllUserByKey" resultType="User">
		select m.* from users m where m.is_delete=0 
		
		 <if test="key!=null  and key!=''">   
          and (m.user_name like '%${key}%' or m.user_idcard like '%${key}%' or m.user_village  like '%${key}%')
        </if> 
        
		order by m.add_time  desc
	 	 
	 </select>
	 
	 
	 
	 <select id="findAllUserByMultiCondition" parameterType="java.util.HashMap"  resultType="User">
		select m.* ,v.add_time as add_time  from users m left join video_ident v on m.id=v.user_id  where m.is_delete=0 
		
		 <if test="isHasVideo==1">   
             and v.add_time is not null 
             and v.is_delete=0   
        </if>
        
        <if test="isHasVideo==2">   
             and v.add_time is null 
        </if>
        
        
         <if test="data_type!=null  and data_type!=''">   
          and m.data_type=#{data_type}
        </if> 
        
        <if test="dataType!=null  and dataType!=''">   
          and m.data_type=#{dataType}
        </if> 
        
        <if test="xzb!=null  and xzb!=''">   
          and m.user_township=#{xzb}
        </if> 
        
         <if test="user_township!=null  and user_township!=''">   
          and m.user_township=#{user_township}
        </if> 
       
        <if test="startTime != null and startTime != ''">
		and unix_timestamp(v.add_time) &gt;= unix_timestamp(#{startTime})
		</if>
		<if test="endTime != null and endTime != ''">
		and unix_timestamp(v.add_time) &lt;=  unix_timestamp(#{endTime})
		</if>
		
		<if test="key!=null  and key!=''">  
          and ( m.user_name  like '%${key}%' or  m.data_type  like '%${key}%'  or m.user_township  like '%${key}%' or m.user_idcard like '%${key}%' or m.user_village  like '%${key}%' )
        </if> 
		 
		order by m.add_time  desc
	 
	 
	 </select>
	 
	 
	<select id="findUserByUserIdcard" resultType="User">
		select * from users  where  user_idcard=#{0} and   is_delete=0  order by add_time  desc
	 </select>
	 <select id="findUserById" resultType="User">
	     select m.* from users m   where m.id=#{0} and m.is_delete=0 
	 </select>
	 
	 <update id="updateUser" parameterType="User">
		update users  
		<set>  
         user_name=#{user_name},user_idcard=#{user_idcard}, user_township=#{user_township},user_village=#{user_village},data_type=#{data_type},
         mobile=#{mobile},img_url=#{img_url},add_time=#{add_time},update_time=#{update_time},is_delete=#{is_delete}
       </set> 
       where id=#{id}
	</update>
	
	 <update id="updateUserName" parameterType="User">
		update users  
		<set>  
         user_name=#{user_name} 
        </set> 
       where id=#{id} and user_idcard=#{user_idcard}  
	</update>

	<insert id="insertUser" parameterType="User">
		insert into users (user_name, user_idcard, user_township,user_village,data_type,mobile,img_url,add_time,update_time) 
		        values(#{user_name},#{user_idcard},#{user_township},#{user_village},#{data_type}, #{mobile}, #{img_url},#{add_time},#{update_time})
	</insert>
	
	  <delete id="deleteUserBatch" parameterType="int">
        update users set is_delete=1  where id  in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
	 
</mapper>
